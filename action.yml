inputs:
  release:
    required: false
  tag:
    required: false
  github_token:
    required: true
    description: secrets.GITHUB_TOKEN
runs:
  using: composite
  steps:
    - shell: bash
      run: |
        if [ -n "${{ inputs.release }}" ]; then
          input="${{ inputs.release }}"
        elif [ -n "${{ inputs.tag }}" ]; then
          input="${{ inputs.tag }}"
        else
          echo neither release nor tag is given
          exit 1
        fi

        owner=`echo "$input" | cut -d / -f 1`
        repository=`echo "$input" | cut -d / -f 2 | cut -d '@' -f 1`
        version=`echo "$input" | cut -d / -f 2 | cut -d '@' -f 2`

        response_path=`mktemp`
        if [ -n "${{ inputs.release }}" ]; then
          q='
            query {
              repository(owner: \"'${owner}'\", name: \"'${repository}'\") {
                latestRelease {
                  tagName
                }
              }
            }
          '
          jq_path='.data.repository.latestRelease.tagName'
          repository_url="https://github.com/$owner/$repository/releases"
        else
          q='
            query {
              repository(owner: \"'${owner}'\", name: \"'${repository}'\") {
                refs(refPrefix: \"refs/tags/\", orderBy: {field: TAG_COMMIT_DATE, direction: DESC}, first: 1) {
                  edges {
                    node {
                      name
                    }
                  }
                }
              }
            }
          '
          jq_path='.data.repository.refs.edges[0].node.name'
          repository_url="https://github.com/$owner/$repository/tags"
        fi

        curl \
          -H "Authorization: bearer ${{ inputs.github_token }}" \
          -X POST \
          -d "{\"query\": \"`echo $q | tr -d '\n'`\"}" \
          -s -o $response_path \
          https://api.github.com/graphql

        latest=`cat $response_path | jq -r "$jq_path"`
        echo "comparing ${latest}. == ${version}.* in ${repository_url}"
        [[ "${latest}." == ${version}.* ]]
